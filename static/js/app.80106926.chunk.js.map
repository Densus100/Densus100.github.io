{"version":3,"sources":["utils/index.js","components/WeatherInfo.js","components/UnitsPicker.js","components/ReloadIcon.js","components/WeatherDetails.js","App.js"],"names":["colors","PRIMARY_COLOR","SECONDARY_COLOR","WeatherInfo","currentWeather","temp","main","details","weather","name","icon","description","iconUrl","View","style","styles","weatherInfo","Text","Image","weatherIcon","source","uri","textPrimary","weatherDescription","textSecondary","StyleSheet","create","alignItems","textTransform","width","height","fontSize","color","fontWeight","marginTop","UnitsPicker","unitSystem","setUnitSystem","selectedValue","onValueChange","item","mode","itemStyle","dropdown","Item","label","value","position","Platform","select","ios","top","android","web","left","ReloadIcon","load","reloadIconName","OS","reloadIcon","Ionicons","onPress","size","right","BORDER_COLOR","WeatherDetails","feels_like","humidity","pressure","speed","wind","windSpeed","Math","round","weatherDetails","weatherDetailsRow","weatherDetailsBox","FontAwesome5","weatherDetailsItem","margin","flexDirection","justifyContent","flex","padding","borderWidth","borderColor","App","useState","errorMessage","setErrorMessage","setCurrentWeather","a","async","Location","status","alert","location","coords","latitude","longitude","weatherUrl","BASE_WEATHER_URL","fetch","response","json","result","ok","message","useEffect","container","StatusBar","textAlign","ActivityIndicator"],"mappings":"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","file":"static/js/app.80106926.chunk.js","sourcesContent":["export const colors = {\r\n    PRIMARY_COLOR: '#FFA500',\r\n    SECONDARY_COLOR: '#000080',\r\n    BORDER_COLOR: '#D3D3D3'\r\n}","import React from 'react'\r\nimport { View, Text, StyleSheet, Image } from 'react-native'\r\nimport { colors } from '../utils/index'\r\n\r\n\r\nconst { PRIMARY_COLOR, SECONDARY_COLOR } = colors\r\n\r\nexport default function WeatherInfo({ currentWeather }) {\r\n    const {\r\n        main: { temp },\r\n        weather: [details],\r\n        name\r\n    } = currentWeather\r\n    const { icon, main, description } = details\r\n    // console.log(details)\r\n\r\n    const iconUrl = `https://openweathermap.org/img/wn/${icon}@4x.png`\r\n    return (\r\n        <View style={styles.weatherInfo}>\r\n            <Text>{name}</Text>\r\n            <Image style={styles.weatherIcon} source={{ uri: iconUrl }}></Image>\r\n            <Text style={styles.textPrimary}>{temp}°</Text>\r\n            <Text style={styles.weatherDescription}>{description}</Text>\r\n            <Text style={styles.textSecondary}>{main}</Text>\r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    weatherInfo: {\r\n        alignItems: 'center'\r\n    },\r\n\r\n    weatherDescription: {\r\n        textTransform: 'capitalize'\r\n\r\n    },\r\n\r\n    weatherIcon: {\r\n        width: 100,\r\n        height: 100\r\n    },\r\n    textPrimary: {\r\n        fontSize: 40,\r\n        color: PRIMARY_COLOR\r\n    },\r\n    textSecondary: {\r\n        fontSize: 20,\r\n        color: SECONDARY_COLOR,\r\n        fontWeight: '500',\r\n        marginTop: 10\r\n    }\r\n})","import React from 'react'\r\nimport { View, StyleSheet, Platform } from 'react-native'\r\nimport { Picker } from '@react-native-community/picker'\r\n\r\nexport default function UnitsPicker({ unitSystem, setUnitSystem }) {\r\n    return (\r\n        <View style={style.unitSystem}>\r\n            <Picker selectedValue={unitSystem} onValueChange={(item) => setUnitSystem(item)} mode=\"dropdown\" itemStyle={style.dropdown}>\r\n                <Picker.Item label='°C' value=\"metric\"></Picker.Item>\r\n                <Picker.Item label='°F' value=\"imperial\"></Picker.Item>\r\n            </Picker>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    unitSystem: {\r\n        position: 'absolute',\r\n        ...Platform.select({\r\n            ios: {\r\n                top: -30\r\n            },\r\n            android: {\r\n                top: 30\r\n            },\r\n            web: {\r\n                top: 30\r\n            }\r\n        }),\r\n\r\n        left: 20,\r\n        height: 50,\r\n        width: 100\r\n    },\r\n\r\n    dropdown: {\r\n        fontSize: 12\r\n    }\r\n})","import React from 'react'\r\nimport { View, Platform, StyleSheet } from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { colors } from '../utils/index'\r\n\r\nexport default function ReloadIcon({ load }) {\r\n    const reloadIconName = Platform.OS == 'ios' ? 'ios-refresh' : 'md-refresh'\r\n\r\n    return (\r\n        <View style={style.reloadIcon}>\r\n            <Ionicons onPress={load} name={reloadIconName} size={24} color={colors.PRIMARY_COLOR} />\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    reloadIcon: {\r\n        position: 'absolute',\r\n        ...Platform.select({\r\n            ios: {\r\n                top: -30\r\n            },\r\n            android: {\r\n                top: 42\r\n            },\r\n            web: {\r\n                top: 30\r\n            }\r\n        }),\r\n\r\n        right: 30,\r\n        // height: 50,\r\n        // width: 100\r\n    }\r\n\r\n})","import React from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport { colors } from '../utils/index'\r\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons'\r\n\r\nconst { PRIMARY_COLOR, SECONDARY_COLOR, BORDER_COLOR } = colors\r\n\r\nexport default function WeatherDetails({ currentWeather, unitSystem }) {\r\n\r\n\r\n    const {\r\n        main: { feels_like, humidity, pressure },\r\n        wind: { speed }\r\n    } = currentWeather\r\n\r\n    const windSpeed = unitSystem == 'metric' ? `${Math.round(speed)} m/s` : `${Math.round(speed)} miles/h`\r\n\r\n    return (\r\n        <View style={style.weatherDetails}>\r\n            <View style={style.weatherDetailsRow}>\r\n                <View style={style.weatherDetailsBox} >\r\n                    <View style={style.weatherDetailsRow} >\r\n                        <FontAwesome5 name=\"temperature-low\" size={25} color={PRIMARY_COLOR}></FontAwesome5>\r\n                        <View style={style.weatherDetailsItem}>\r\n                            <Text>Feels Like:</Text>\r\n                            <Text style={style.textSecondary}>{feels_like}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={style.weatherDetailsBox} >\r\n                    <View style={style.weatherDetailsRow} >\r\n                        <FontAwesome5 name=\"tint\" size={30} color={PRIMARY_COLOR}></FontAwesome5>\r\n                        <View style={style.weatherDetailsItem}>\r\n                            <Text>Humidity:</Text>\r\n                            <Text style={style.textSecondary}>{humidity} %</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <View style={style.weatherDetailsRow}>\r\n                <View style={style.weatherDetailsBox} >\r\n                    <View style={style.weatherDetailsRow} >\r\n                        <FontAwesome5 name=\"wind\" size={25} color={PRIMARY_COLOR}></FontAwesome5>\r\n                        <View style={style.weatherDetailsItem}>\r\n                            <Text>Wind Speed:</Text>\r\n                            <Text style={style.textSecondary}>{windSpeed}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={style.weatherDetailsBox} >\r\n                    <View style={style.weatherDetailsRow} >\r\n                        <FontAwesome5 name=\"tachometer-alt\" size={30} color={PRIMARY_COLOR}></FontAwesome5>\r\n                        <View style={style.weatherDetailsItem}>\r\n                            <Text>Pressure:</Text>\r\n                            <Text style={style.textSecondary}>{pressure} hPa</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View >\r\n    )\r\n}\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    weatherDetails: {\r\n        marginTop: 'auto',\r\n        margin: 15,\r\n        // borderWidth: 1,\r\n        // borderColor: BORDER_COLOR,\r\n        // borderRadius: 10\r\n    },\r\n\r\n    weatherDetailsRow: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    weatherDetailsBox: {\r\n        flex: 1,\r\n        padding: 20,\r\n        borderWidth: 1,\r\n        borderColor: BORDER_COLOR,\r\n    },\r\n    weatherDetailsItem: {\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    textSecondary: {\r\n        fontSize: 15,\r\n        color: SECONDARY_COLOR,\r\n        fontWeight: '700',\r\n        margin: 7\r\n    }\r\n\r\n})","import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport * as Location from 'expo-location'\nimport WeatherInfo from './components/WeatherInfo'\nimport UnitsPicker from './components/UnitsPicker'\nimport { colors } from './utils/index'\nimport ReloadIcon from './components/ReloadIcon'\nimport WeatherDetails from './components/WeatherDetails'\n// import { LinearGradient } from 'expo-linear-gradient';\n// import { WEATHER_API_KEY } from 'react-native-env'\n\nconst WEATHER_API_KEY = '5e1df7600a6b596e723e9b5929751e83'\nconst BASE_WEATHER_URL = 'https://api.openweathermap.org/data/2.5/weather?'\n\nexport default function App() {\n\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [currentWeather, setCurrentWeather] = useState(null)\n  const [unitSystem, setUnitSystem] = useState('metric')\n\n  useEffect(() => {\n    load()\n  }, [unitSystem])\n\n  async function load() {\n    setCurrentWeather(null)\n    setErrorMessage(null)\n    try {\n      let { status } = await Location.requestPermissionsAsync()\n\n      while (status != 'granted') {\n        setErrorMessage('Access to Location is needed to run the app')\n        alert('Access to Location is needed to run the app. Please restart the app / grant request')\n        return\n      }\n\n\n      const location = await Location.getCurrentPositionAsync()\n\n      const { latitude, longitude } = location.coords\n\n      const weatherUrl = `${BASE_WEATHER_URL}lat=${latitude}&lon=${longitude}&appid=${WEATHER_API_KEY}&units=${unitSystem}`\n\n      const response = await fetch(weatherUrl)\n\n      const result = await response.json()\n\n      // alert(`Latitude : ${latitude} Longitude : ${longitude}`)\n\n      if (response.ok) {\n        setCurrentWeather(result)\n      } else {\n        setErrorMessage(result.message)\n      }\n\n\n    } catch (error) {\n      setErrorMessage(error.message)\n\n    }\n\n  }\n\n  if (currentWeather) {\n\n    // const { main: { temp } } = currentWeather\n    return (\n      <View style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <View style={styles.main}>\n          <UnitsPicker unitSystem={unitSystem} setUnitSystem={setUnitSystem} />\n          <ReloadIcon load={load} />\n          <WeatherInfo currentWeather={currentWeather}></WeatherInfo>\n          {/* <Text>{temp}</Text> */}\n        </View>\n        <WeatherDetails currentWeather={currentWeather} unitSystem={unitSystem}></WeatherDetails>\n\n      </View>\n    );\n\n  } else if (errorMessage) {\n    return (\n      <View style={styles.container}>\n        <Text style={{ textAlign: 'center' }}>{errorMessage}</Text>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size='large' color={colors.PRIMARY_COLOR}></ActivityIndicator>\n        <StatusBar style=\"auto\" />\n      </View>\n    );\n  }\n\n\n\n\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: 'red',\n    // alignItems: 'center',\n    justifyContent: 'center',\n  },\n  main: {\n    justifyContent: 'center',\n    flex: 1\n  }\n\n\n});\n"],"sourceRoot":""}